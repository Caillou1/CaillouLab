{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Print to screen": {
		"scope": "csharp",
		"prefix": "log",
		"body": [
			"KU.Log($0);"
		],
		"description": "Log output to screen using KU"
	},

	"Debug sphere": {
		"scope" : "csharp",
		"prefix": "sphere",
		"body": [
			"KU.DebugSphere($0);"
		],
		"description": "Draw a debug sphere using KU"
	},

	"Start Timer": {
		"scope": "csharp",
		"prefix": "timer",
		"body": [
			"KU.StartTimer($0);"
		],
		"description": "Start a timer using KU"
	},

	"Stop Timer": {
		"scope": "csharp",
		"prefix": "stop",
		"body": [
			"KU.StopTimer($0);"
		],
		"description": "Stop a timer using KU"
	}
}